# 2020_5-23_CodePractice

//标题：合法括号序列判断

//       对于一个字符串，请设计一个算法，判断其是否为一个合法的括号串。
//        给定一个字符串A和它的长度n，请返回一个bool值代表它是否为一个合法
//        的括号串。
//        一个合法的括号串定义为：
//               1.只包括括号字符；    2.左括号和右括号一一对应
//     【测试样例：】   "(()())",6
//           返回：              true
//     【测试样例：】   "()a()()",7
//           返回：             false
//     【测试样例：】   "()(()()",7
//           返回：             false

//【题目解析】：
//看到这种括号匹配问题同学们应当第一反应使用栈，只要有这个思路，相信这个问题会迎刃而解。
//【解题思路】：
//  1.碰到")"开始弹出栈顶的"("，如果此时栈为空，则返回false
//  2.碰到其他内容直接返回false
//  3.字符串结尾时，栈非空返回false


import java.util.Scanner;
import java.util.Stack;

public class day03_2 {
    public static boolean isValid(String A,int n){
        if(A==null||n==0){
            return false;
        }
        return chkParenthesis(A,n);
    }

    private static boolean chkParenthesis(String s, int n) {
        Stack<Character> stack=new Stack<>();
        for(int i=0;i<n;i++) {
            if (s.charAt(i) == '(') {
                stack.push(s.charAt(i));
            } else if(s.charAt(i)==')'){
                if (stack.isEmpty()) {
                    return false;
                } else {
                    stack.pop();
                }
            }else {
                return false;
            }
        }
        if (!stack.isEmpty()) {
            return false;
        } else {
            return true;
        }
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        System.out.println(isValid(s,s.length()));
    }
}
